::::::::::::::::::::::::::::任意值三角函数计算::::::::::::::::::::::::::::::
::用法：call  tri  RetVar=[a[rc]]Function[d]Num                           ::
::            %1 指定一个变量名，用于存储返回值，运算结果四舍五入         ::
::            %2 指定一个函数，反三角函数以 a 或 arc 为前缀，可用函数有： ::
::                  三角函数           sin  cos  tan  cot  sec  csc       ::
::                  反三角函数（取整） asin acos atan acot asec acsc      ::
::               数值紧跟在函数之后，不可分割，允许使用计算范围内的小数。 ::
::                                                                        ::
:: 实例：call tri n=sin160     将 sin160° 的值存为 %n%                   ::
::       call tri n=cos-75     将 cos-75° 的值存为 %n%                   ::
::       call tan n=atan1.25   将 atan1.25 的值存为 %n%                   ::
::                                                                        ::
:: 说明：1、函数中的角度单位为度，计算时允许使用任意有效度数；            ::
::       2、计算结果均四舍五入，三角函数精确到 0.0001，反三角函数取整；   ::
::       3、当参数格式不对时将退出码设为2，当使用不在所选函数计算范围的数 ::
::          值时退出码设为1，任何错误都将把用户指定的 retvar 设为 Error。 ::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
set "%~1=Error"&setlocal enabledelayedexpansion&set n=
for /f "delims=-0123456789" %%a in ("%~2.")do (set tri=%%~na
(if /i !tri:~^,-3!==arc set tri=a!tri:~,-3!&if /i !tri:~-1!==d set tri=!tri:~,-1!)&if !tri!.==. exit/b2)
for /f "delims=aceinost" %%a in ("%~2.")do set num=%%~na&if %%a==. exit /b2
(if /i %tri%==sin set n=%num%)&if /i %tri%==cos set/an=num+90
if defined n set/a"n=(n%%360+360)%%360,m=1-n/181*2,n%%=180,n=((91-n%%90*(n/91*2-1))-n/90)%%91+232"
if defined n (for /f "usebackskip=%n%" %%a in ("%~f0")do 2>nul (
set/an=1000%%a,m=%%a/10000&set "%~1=%m:1=%!m!.!n:~-4!"
for %%a in (!n!)do endlocal&set "%~1=%%a"&exit/b0))else (
if /i %tri%==tan set n=%num%)&if /i %tri%==cot set/an=90-num
if defined n set/a"n=(n%%180+180)%%180,m=1-n/91*2,n=(91+n%%90*m-n/91-^!((n-90)%%180))%%91+141"
if defined n for /f "usebackskip=%n%" %%a in ("%~f0")do 2>nul (if %%a==Error exit/b1
set/an=1000%%a,m=%%a/10000&&set "%~1=%m:1=%!m!.!n:~-4!"||set "%~1=%%a"
for %%a in (!n!)do endlocal&set "%~1=%%a"&exit/b0)else (
if /i %tri%==sec set n=%num%)&if /i %tri%==csc set /a n=num+90
if defined n set/a"n=((n+90)%%360+360)%%360,m=1-n/181*2,n=(90+n%%90*(n%%180/91*2-1)+n%%180/91)%%91*^!^!((n+90)%%180)+50"
if defined n (for /f "usebackskip=%n%" %%a in ("%~f0")do 2>nul (if %%a==Error exit/b1
set/a"n=1000%%a,m+=m*%%a/10000"&&set n=!m!.!n:~-4!||set n=%%a
for %%a in (!n!)do endlocal&set "%~1=%%a"&exit/b0))
for /f "tokens=1,2delims=aceinost." %%a in ("%~2.0")do (set num=%%b0000
set /a "m=(%%a1>>31)*2+1,num=~-%%a*10000+(1!num:~,5!+5)/10"||exit /b2) 2>nul
2>nul ((if /i %tri%==asin set /a n=-~-m*90)&if /i %tri%==acos set/an=90-~-m*90
if defined n (set/a"1/^!(num/10001)"||exit/b1
for /f "usebackskip=232tokens=2" %%a in ("%~f0")do if %num% gtr %%a (
set/an+=m)else for %%a in (!n!)do endlocal&set "%~1=%%a"&exit /b0
)else (if /i %tri%==atan set/an=-~-m*90)&if /i %tri%==acot set/an=90,m=-m
if defined n (for /f "usebackskip=141tokens=2" %%a in ("%~f0") do if %num% gtr %%a (
set/an+=m)else for %%a in (!n!)do endlocal&set "%~1=%%a"&exit /b0
)else (if /i %tri%==asec set/an=-~-m*90)&if /i %tri%==acsc set/an=90-~-m*90
if defined n (set/a"1/(num/10000),num=num*m-10000"||exit/b1
for /f "usebackskip=50tokens=2" %%a in ("%~f0")do if !num! gtr %%a (
set/an+=m)else for %%a in (!n!)do endlocal&set "%~1=%%a"&exit /b0))
exit/b1
0 0
2 3
6 10
14 19
24 31
38 46
55 65
75 86
98 111
125 139
154 170
187 205
223 243
263 284
306 329
353 377
403 429
457 485
515 545
576 608
642 676
711 748
785 824
864 904
946 989
1034 1079
1126 1174
1223 1274
1326 1379
1434 1490
1547 1606
1666 1728
1792 1857
1924 1992
2062 2134
2208 2283
2361 2440
2521 2605
2690 2778
2868 2960
3054 3151
3250 3352
3456 3563
3673 3786
3902 4020
4142 4267
4396 4527
4663 4802
4945 5092
5243 5398
5557 5721
5890 6064
6243 6427
6616 6812
7013 7221
7434 7655
7883 8118
8361 8612
8871 9139
9416 9703
10000 10308
10627 10957
11301 11657
12027 12412
12812 13228
13662 14114
14586 15078
15593 16131
16695 17285
17904 18555
19238 19957
20716 21515
22361 23255
24203 25209
26280 27420
28637 29939
31336 32837
34454 36202
38097 40159
42408 44874
47588 50589
53925 57655
61853 66613
72055 78337
85668 94334
104737 117455
133356 153804
181073 219256
276537 372016
562987 1135930
Error Error
0 87
175 262
349 437
524 612
699 787
875 963
1051 1139
1228 1317
1405 1495
1584 1673
1763 1853
1944 2035
2126 2217
2309 2401
2493 2586
2679 2773
2867 2962
3057 3153
3249 3346
3443 3541
3640 3739
3839 3939
4040 4142
4245 4348
4452 4557
4663 4770
4877 4986
5095 5206
5317 5430
5543 5658
5774 5890
6009 6128
6249 6371
6494 6619
6745 6873
7002 7133
7265 7400
7536 7673
7813 7954
8098 8243
8391 8541
8693 8847
9004 9163
9325 9490
9657 9827
10000 10176
10355 10538
10724 10913
11106 11303
11504 11708
11918 12131
12349 12572
12799 13032
13270 13514
13764 14019
14281 14550
14826 15108
15399 15697
16003 16319
16643 16977
17321 17675
18040 18418
18807 19210
19626 20057
20503 20965
21445 21943
22460 22998
23559 24142
24751 25386
26051 26746
27475 28239
29042 29887
30777 31716
32709 33759
34874 36059
37321 38667
40108 41653
43315 45107
47046 49152
51446 53955
56713 59758
63138 66912
71154 75958
81443 87769
95144 103854
114301 127062
143007 163499
190811 229038
286363 381885
572900 1145887
Error Error
0 87
175 262
349 436
523 610
698 785
872 958
1045 1132
1219 1305
1392 1478
1564 1650
1736 1822
1908 1994
2079 2164
2250 2334
2419 2504
2588 2672
2756 2840
2924 3007
3090 3173
3256 3338
3420 3502
3584 3665
3746 3827
3907 3987
4067 4147
4226 4305
4384 4462
4540 4617
4695 4772
4848 4924
5000 5075
5150 5225
5299 5373
5446 5519
5592 5664
5736 5807
5878 5948
6018 6088
6157 6225
6293 6361
6428 6494
6561 6626
6691 6756
6820 6884
6947 7009
7071 7133
7193 7254
7314 7373
7431 7490
7547 7604
7660 7716
7771 7826
7880 7934
7986 8039
8090 8141
8192 8241
8290 8339
8387 8434
8480 8526
8572 8616
8660 8704
8746 8788
8829 8870
8910 8949
8988 9026
9063 9100
9135 9171
9205 9239
9272 9304
9336 9367
9397 9426
9455 9483
9511 9537
9563 9588
9613 9636
9659 9681
9703 9724
9744 9763
9781 9799
9816 9833
9848 9863
9877 9890
9903 9914
9925 9936
9945 9954
9962 9969
9976 9981
9986 9990
9994 9997
9998 10000
